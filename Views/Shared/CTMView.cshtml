@model DailyPerformanceReportAuto.ViewModel.DailyQuoteTable



@using (Html.BeginForm("create", "DailyQuotes"))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.QuoteSource, @Model.QuoteSource);
    <div class="form-horizontal ">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            <div class="form-group col col-md-12 bluebackground">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="form-group">

            @Html.Label("Value", htmlAttributes: new { @class = "control-label col-md-4 col ol-md-offset-2 " })
            @Html.Label("Comments", htmlAttributes: new { @class = "control-label col-md-4 ol-md-offset-2 " })

        </div>

        <div class="form-group">

            @Html.Label("Consumer Enquiries", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-8 ">

                @Html.EditorFor(model => model.TQValue, new { htmlAttributes = new { @class = " form-control col-md-4" } })

                @Html.EditorFor(model => model.TQComments, new { htmlAttributes = new { @class = "form-control col-md-offset-2  col-md-4" } })
            </div>

        </div>
        <div class="form-group">

            @Html.Label("Prices Presented", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-8 ">

                @Html.EditorFor(model => model.PQValue, new { htmlAttributes = new { @class = " form-control col-md-4" } })

                @Html.EditorFor(model => model.PQComments, new { htmlAttributes = new { @class = "form-control col-md-offset-2  col-md-4" } })
            </div>

        </div>

        <div class="form-group">

            @Html.Label("Prices Presented @P1", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-8 ">

                @Html.EditorFor(model => model.TopQValue, new { htmlAttributes = new { @class = " form-control col-md-2" } })

                @Html.EditorFor(model => model.TopQComments, new { htmlAttributes = new { @class = "form-control col-md-offset-2  col-md-4" } })


            </div>

        </div>

        <div class="form-group">

            @Html.Label("Click Through (PCTs)", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-8 ">

                @Html.EditorFor(model => model.ClickThrough, new { htmlAttributes = new { @class = " form-control col-md-4" } })

                @Html.EditorFor(model => model.ClickThroughComments, new { htmlAttributes = new { @class = "form-control col-md-offset-2  col-md-4" } })
            </div>

        </div>
        <div class="form-group">

            @Html.Label("Top Quotes %", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-8 ">

                @Html.EditorFor(model => model.TopQuote, new { htmlAttributes = new { @class = " form-control col-md-4" } })

                @Html.EditorFor(model => model.TopQuoteComments, new { htmlAttributes = new { @class = "form-control col-md-offset-2  col-md-4" } })
            </div>

        </div>

        <div class="form-group">

            @Html.Label("Quotes Declined %", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-8 ">

                @Html.EditorFor(model => model.QBValue, new { htmlAttributes = new { @class = " form-control col-md-4" } })

                @Html.EditorFor(model => model.QBComments, new { htmlAttributes = new { @class = "form-control col-md-offset-2  col-md-4" } })
            </div>

        </div>


        <div class="form-group">
            <div class="col-md-offset-4 col-md-8">
                <input type="submit" value=" Submit " id="btnSubmit" class="btn btn-lg btn-primary col-md-6" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


}
